In this Crud operation there are 4 packages using dao layer 
1. package in.sp.beans 
      - Student
2. DAO Layer (package- in.sp.dao )
      - Interface StudentDao
      - StudentDaoImpl
3. Spring Configuration File (package- in.sp.resource )
      - SprinfConfigFile
4. Main class (package - in.sp.main)
      - App 
---------------------------------------------------------
package in.sp.beans 

@Entity
@Table(name="std_register")
public class Student
{
     @ID
     @Column(name="std_id")
     private int stdid;

     @Column(name="std_name")
     private String name;

     @Column(name="std_rollno")
     private int rollno;

 //getter and setter 
}

Dao-->> Dao layer se banki code le len (Amritash_Dwivedi/Dao Layer)
-------------------------------------------------------------------------------------------------------------------
in.sp.resource
@Configuration
@EnableTransactionManagement // <tx:annotation-driven/>
public class SprinfConfigFile
{

@Bean
public DriverManagerDataSource dmDataSource()
{
     DriverManagerDataSource dmDataSource = new DriverManagerDataSource();
      dmDataSource.setDriverClassName("com.mysql.cj/jdbc.Driver");
      dmDataSource.setUrl("jdbc:mysql://localhost:3306/spring_hibernate_DB")
      dmDataSource.setUsername("root");
      dmDataSource.setPassword("root@");

      return dmDataSource;
}

@Bean
public LocalSessionFactoryBean mySessionFactory()
{
   LocalSessionFactoryBean mySessionFactory = new LocalSessionFactoryBean();
    mySessionFactory.setDataSource(dmDataSource());

    Properties hibernateProperties = new Properties();
    hibernateProperties.setProperty("hibernate.hbm2ddl.auto", "update");
    hibernateProperties.setProperty("hibernate.show_sql","true");
    hibernateProperties.setProperty("hibernate.format_sql","true");
    mySessionFactory.setHibernateProperties(hibernateProperties);

   //MappingResources
        //  mySessionFactory.setMappingResources("/in/sp/resources/student.hbm.xml");//agar xml file k through mapping krte tb use hoga

   mySessionFactory.setPackagesToScan("in.sp.beans");
    return mySessionFactory;
}

@Bean
public HibernateTransactionManager trasactionManager()
{
    HibernateTransactionManager transactionManager = new HibernateTransactionManager();
    transactionManager.setSessionFactory(mySessionFactory().getObject());
    return transactionManager;
}

@Bean
public HibernateTemplate myHibernateTemplate()
{
   HibernateTemplate hibernateTemplate =new HibernateTemplate();
   hibernateTemplate.setSessionfactory(mySessionFactory().getObject());
   return hibernateTemplate;
}

@Bean 
public StudentDao stdDaoImplBean(){
      StudentDaoImpl stdDaoImpl = new StudentDaoImpl();
      stdDaoImpl.setHibernateTemplate(myHibernateTemplate());
      return stdDaoImpl;
}

-----------------------------------------------------------------------------------------------------------------
public class App
{
   Public static void main(String[], arg)
   {

     StudentDao std = new StudentDao();
     std.setStdid(01);
     std.setname("Atul");
     std.setrollno(152);
     std.setcity("Bhopal");

    ApplicationContext context = new AnnotationConfigApplicationContext(SpringConfigFile.class)
        StudentDao stdDao = (StudentDao) context.getBean("stdDaoImplBean");
        stdDao.addStdDetails(std);

    //stdDao.updatestdDetails(std);
    // stdDao.searchStdDetails(2);
   // stdDao.deleteStdDetails(Std);
   }
}

























