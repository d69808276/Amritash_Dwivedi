1. Add Dependency - 1.Javax Persistence API Â» 2.2, 
                    2.Hibernate Core,
                    3.MySQL Connector Java

4. Create POJO classes
    package in.sp.entity

public class Student {
 private int id;
 private String name;
 private  String email;
 private float marks
//getter and setter
}
------------------------------------------------------------------------------------------------------------------------------
5. create mapping file
package in.sp.resource
    student.xml

     <!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
     <class name="in.sp.entity.Student" table="std_marks" >
          <id name="id" column="std_id" />
          <property name="name" column="std_name" />
          <property name="email" column="std_email" />
          <property name="marks" column="std_marks" />
</hibernate-mapping>
-------------------------------------------------------------------------------------------------------------------------------
6. Create Persistence Unit Configuration (Persistance.xml) in META-INF folder
 create folder src/main/resource 
   |-> META-INF (folder)
           |-> Persistence.xml
    (Java Persistance API -  XML schemas  goto --->  persistence_2_2.xsd and download this file open in notepad and copy karo jo niche diya schema hai )===========>>>>>
   <persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
          http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd"
        version="2.2">
        <persistance-unit name="main-persistance-unit">

              <mapping-file>in/sp/resources/student.xml</mapping-file>

(yaha pe 2 properties aaengi 1. database properties or 2 hibernate wali properties )
              <properties> 
                      //Database properties
                         <property name="javax.persistence.jdbc.driver" value="com.mysql.cj.jdbc.Driver" />
                         <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/jpa_db" />        //   (jpa_db ye database name hai database ka jaa k create karo phle)
                         <property name="javax.persistence.jdbc.username" value="root" />
                         <property name="javax.persistence.jdbc.password" value="root@100" />

                     //Hibernate Properties

                        <property name="hibernate.hbm2ddl.auto" value="update" />
                        <property name="hibernate.show_sql" value="true" />
             </properties>

          </persistance-unit>

    </persistence>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------+

7. Create main class and execute the application
in.sp.main

public class App{
 public static void main(String[], arg)
{
      Student std = new Student();
      std.setId(1);
      std.setName("AD");
      std.setrollno(11);
      std.setemail("ad@gmail.com");
 
    =>  EntityManagerFactory entityManagerFactory = Persistence.createEntityManagerFactory("main-persistance-unit");      
    =>  EntityManager entityManager = entityManagerFactory.createEntityManger();
    =>  EntityTransaction entityTransaction = entityManager.getTransaction();
       try
        {
          entityTransaction.begin();
          entityManager.persist(std);
          entityTransaction.commit();
          System.out.println("Success");
        }
        catch(Exception ex)
          {
            ex.prinr=tStackTrace();
            entityTransaction.rollback();
            System.out.println("fail");
         }
         finally
          {
             entityManager.close();
             entityManagerFactory.close();
          }
      }
 }       

7.   Create main class and execute the application
7.1. Create EntityManagerFactory Object
   EntityManagerFactory emf = Persistence.createEntityManagerFactory("main-persistance-unit");

7.2. Create EntityManger Object 
    =>  EntityManager em = emf.createEntityManger();

7.3. Create EntityTransaction object and begin the transaction 
    =>  EntityTransaction entityTransaction = em.getTransaction();

7.4. // Perform Database Operations using EntityManager instance
           ->Insert operation
                  = persist();
           -> Retrival operation
                 = find();
           -> update operation
                 = merge();
           -> Delete operation
                 = remove();

8. Commit the transaction
9. Close the resource














